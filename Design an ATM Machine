class ATM {
    private final int[] notes = {20, 50, 100, 200, 500};
    private final long[] count = new long[5];

    public ATM() {
        Arrays.fill(count, 0);
    }

    public void deposit(int[] banknotesCount) {
        for (int i = 0; i < 5; i++) {
            count[i] += banknotesCount[i];
        }
    }

    public int[] withdraw(int amount) {
        int[] used = new int[5];
        int[] result = new int[5];

        // Traverse in reverse to use largest notes first
        for (int i = 4; i >= 0; i--) {
            int denom = notes[i];
            long canUse = Math.min(count[i], amount / denom);
            used[i] = (int) canUse;
            amount -= denom * used[i];
        }

        if (amount == 0) {
            for (int i = 0; i < 5; i++) {
                count[i] -= used[i];
                result[i] = used[i];
            }
            return result;
        }
        // Rollback if not possible
        return new int[]{-1};
    }
}
